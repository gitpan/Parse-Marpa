#!/usr/local/ActivePerl-5.10/bin/perl
require 5.010_000;

use Carp;
use Getopt::Long;
use Parse::Marpa;
use English;
use Fatal qw(open close);

my $command = shift;
my $grammar_file;
my $text_to_parse;
my $show_SDFA;
my %options;

given ($command) {
    when ('compile') {
        croak unless GetOptions("option=s" => \%options);
	do_compile();
    }
    when ('parse') {
        croak unless GetOptions(
	    "grammar=s" => \$grammar_file,
	    "compiled_grammar=s" => \$compiled_grammar_file,
	    "text=s" => \$text_to_parse,
	    "show_SDFA" => \$show_SDFA,
	    "option=s" => \%options,
	);
	do_parse();
    }
    default {
        croak("Unimplemented marpa command: $command");
    }
}

sub do_compile {
    my $grammar_source; { local($RS) = undef; $grammar_source = <STDIN>; }

    my $grammar = new Parse::Marpa(
	 source => \$grammar_source,
	 %options
    );

    $grammar->precompute();
    my $compiled_grammar = $grammar->compile();
    print $$compiled_grammar;
}

sub do_parse {

    my $grammar;
    if (defined $compiled_grammar_file) {
	open(GRAMMAR, "<", $compiled_grammar_file);
	my $compiled_grammar; { local($RS) = undef; $compiled_grammar = <GRAMMAR>; }
	$grammar = Parse::Marpa::decompile();
    }
    elsif (defined $grammar_file) {
	open(GRAMMAR, "<", $grammar_file);
	my $grammar_source; { local($RS) = undef; $grammar_source = <GRAMMAR>; }
	eval {
	    $grammar = new Parse::Marpa(
		source => \$grammar_source,
		(%options)
	    );
	};
	if ($@) {
	    die("Parse of $grammar_file failed:\n", $@);
	}
	%options = ();
    }
    else {
        croak("No grammar specified");
    }

    if ($show_SDFA) {
       print $grammar->show_SDFA();
    }

    my $parse = new Parse::Marpa::Parse(
        grammar => $grammar,
    );
    if (not defined $text_to_parse) {
	local($RS) = undef; $text_to_parse = <STDIN>;
    }

    if ((my $fail_location = $parse->text(\$text_to_parse)) >= 0) {
        print STDERR Parse::Marpa::show_location("Parse failed", \$text_to_parse, $fail_location);
	exit 1;
    }

    if (!$parse->initial()) {
        croak("No parse")
    }

    my $value = $parse->value();
    if (not defined $value) {
	say 'Marpa returned a "Marpa No Value"';
	return;
    }
    if (not defined $$value) {
	say 'Marpa returned an undefined';
	return;
    }
    say $$value;

}
