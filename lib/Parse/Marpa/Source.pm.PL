use 5.010_000;
use strict;
use warnings;
use Fatal qw(chdir open);
use English qw( -no_match_vars ) ;
use lib "lib";
use Parse::Marpa;
use Parse::Marpa::Raw_Source;

if( @ARGV ) {
   open( STDOUT, ">", $ARGV[0] ) or die "Cannot write '$ARGV[0]' - $!";
}

say "# This file was automatically generated by Parse::Marpa ", $Parse::Marpa::VERSION;

print <<'END_OF_PREAMBLE_CODE';
use 5.010_000;

use warnings;
use strict;

# It's all integers, except for the version number
use integer;

package Parse::Marpa::Source;

END_OF_PREAMBLE_CODE

say 'our $VERSION = "', $Parse::Marpa::VERSION, q{";};

print <<'END_OF_PREAMBLE_CODE';

package Parse::Marpa::Internal::Source;

use English qw( -no_match_vars ) ;
{
    local($RS) = undef;
    $Parse::Marpa::Internal::compiled_source_grammar = \(<DATA>);
}

1;

# Local Variables:
#   mode: cperl
#   cperl-indent-level: 4
#   fill-column: 100
# End:
# vim: expandtab shiftwidth=4:

__DATA__

END_OF_PREAMBLE_CODE

print ${Parse::Marpa::create_compiled_source_grammar()};
print "\n";
